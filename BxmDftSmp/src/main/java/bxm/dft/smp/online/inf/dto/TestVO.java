/*
 * Generated by VO Generator 
 */
package bxm.dft.smp.online.inf.dto;

import bxm.common.annotaion.BxmCategory;
import bxm.vo.IValueObject;
import java.util.Collections;
import java.util.Hashtable;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * 
 *
 * @author sysadmin
 */
@SuppressWarnings("all")
@BxmCategory(type="VO", logicalName="", description="", author="sysadmin")
public class TestVO implements IValueObject
{
	private static final long serialVersionUID= -1691040553L;
	
	/**
	 * 
	 */
	private java.lang.String test;
	
	/**
	 * 
	 * @param test
	 */
	public void setTest(java.lang.String test){
		this.test= test;
	}
	
	/**
	 * 
	 */
	public java.lang.String getTest(){
		return test;
	}
	/*
	 * Dynamic Getter Setter
	 */
	private Hashtable<String, Object> htDynamicVariable= new Hashtable<String, Object>();
	
	@Override
	public Object get(String key){
		switch( key.hashCode() ){
		case 3556498 : /* test */
			return getTest();
		default :
			if ( htDynamicVariable.containsKey(key) ) return htDynamicVariable.get(key);
			else {
				return null;
			}
		}
	}
	
	@SuppressWarnings("unchecked")
	@Override
	public void set(String key, Object value){
		switch( key.hashCode() ){
		case 3556498 : /* test */
			setTest((java.lang.String) value);
			break;
		default :
			htDynamicVariable.put(key, value);
		}
	}
	
	/**
	 * Map for the declared fields and classes
	 */
	public static final Map<String, Class<?>> FIELDS;
	static{
		Map<String, Class<?>> temp= new LinkedHashMap<String, Class<?>>();
		temp.put("test", java.lang.String.class);
		FIELDS= Collections.unmodifiableMap(temp);
	}
	
	/**
	 * Map for the declared fields and objects
	 */
	@Override
	public Map<String, Object> getFieldValues(){
		Map<String, Object> map= new LinkedHashMap<String, Object>();
		map.put("test", getTest());
		return map;
	}
}
